esphome:
  name: single-pow-hvm62k-48v-lip
  friendly_name: -Single POW-HVM6.2K-48V-LIP

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# FIXME  Try Anchors and Aliases from here: https://spacelift.io/blog/yaml$0
# Thanks to this thread!  https://github.com/softwarecrash/Solar2MQTT/discussions/209
# and this thread:  https://www.reddit.com/r/Esphome/comments/198lze3/looking_for_guidance_how_to_set_up_multiple/$0
# and this: https://devices.esphome.io/devices/Narada-NPFC$0

substitutions:
  tx_pin: GPIO10
  rx_pin: GPIO9
  id_suffix: ""
  name_suffix: ""
  modbus_id: modbus_id${id_suffix}
  uart_id: uart${id_suffix}
  modbus_controller_id: modbus_controller${id_suffix}
  update_seconds: "1s"
  write_skip: "60"

uart:
  - id: uart_id${id_suffix}
    baud_rate: 9600
    tx_pin: ${tx_pin}
    rx_pin: ${rx_pin}

modbus:
  - id: modbus_id${id_suffix}
    uart_id: uart_id${id_suffix}

modbus_controller:
  - id: modbus_controller_id${id_suffix}
    address: 0x01
    modbus_id: modbus_id${id_suffix}
    setup_priority: -10
    offline_skip_updates: 60
    update_interval: ${update_seconds}


# PROTOTYPE SENSORS Anchors/Aliases

# needs random . before name
# https://community.home-assistant.io/t/how-do-i-label-and-use-anchors/812692/6$0
.modbus_entity: &modbus_entity
  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    id: _need_to_override_this
    register_type: holding

.modbus_sensor: &modbus_sensor
  - <<: *modbus_entity
    value_type: S_WORD
    state_class: measurement
    accuracy_decimals: 0 

.modbus_volts: &modbus_volts
  - <<: *modbus_sensor
    device_class: voltage
    unit_of_measurement: "V"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1 

.modbus_amps: &modbus_amps
  - <<: *modbus_sensor
    device_class: current
    unit_of_measurement: "A"
    accuracy_decimals: 1
    filters:
      - multiply: 0.1 

.modbus_watts: &modbus_watts
  - <<: *modbus_sensor
    device_class: power
    unit_of_measurement: "W"
    # VA override:
    # device_class: apparent_power
    # unit_of_measurement: "VA"

.modbus_hz: &modbus_hz
  - <<: *modbus_sensor
    device_class: frequency
    unit_of_measurement: "Hz"
    accuracy_decimals: 1
    filters:
      - multiply: 0.01

.modbus_percent: &modbus_percent
  - <<: *modbus_sensor
    device_class: battery
    unit_of_measurement: "%"

.modbus_temp: &modbus_temp
  - <<: *modbus_sensor
    device_class: temperature
    unit_of_measurement: "Â°C"
    accuracy_decimals: 1 

.modbus_switch: &modbus_switch
  - <<: *modbus_entity
    entity_category: config
    bitmask: 1
    use_write_multiple: true
    skip_updates: ${write_skip}


text_sensor:
  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Working Mode${name_suffix}"
    id: Working_Mode${id_suffix}
    address: 201
    entity_category: diagnostic
    register_type: holding
    response_size: 2
    raw_encode: HEXBYTES
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0: return std::string("Power On Mode");
        case 1: return std::string("Standby mode");
        case 2: return std::string("Mains mode");
        case 3: return std::string("Off-Grid mode");
        case 4: return std::string("Bypass mode");
        case 5: return std::string("Charging mode");
        case 6: return std::string("Fault mode");        
        default: return std::string(x);
      } return x;  

#FIXME  Series NO. ASC address 186 registers 12 Read


sensor:
  
  - <<: *modbus_volts
    name: "Mains Voltage${name_suffix}"
    id: Mains_Voltage${id_suffix}
    address: 202
    accuracy_decimals: 0 # still want this?

  - <<: *modbus_hz
    name: "Mains Frequency${name_suffix}"
    id: Mains_Frequency${id_suffix}
    address: 203

  - <<: *modbus_watts
    name: "Mains Power${name_suffix}"
    id: Mains_Power${id_suffix}
    address: 204

  - <<: *modbus_volts
    name: "Inverter Voltage${name_suffix}"
    id: Inverter_Voltage${id_suffix}
    address: 205

  - <<: *modbus_amps
    name: "Inverter Current${name_suffix}"
    id: Inverter_Current${id_suffix}
    address: 206

  - <<: *modbus_hz
    name: "Inverter Frequency${name_suffix}"
    id: Inverter_Frequency${id_suffix}
    address: 207

  - <<: *modbus_watts
    name: "Inverter Power${name_suffix}"
    id: Inverter_Power${id_suffix}
    address: 208
 
  - <<: *modbus_watts
    name: "Inverter Charging Power${name_suffix}"
    id: Inverter_Charging_Power${id_suffix}
    address: 209

  - <<: *modbus_volts
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Output Voltage${name_suffix}"
    id: Output_Voltage${id_suffix}
    address: 210

  - <<: *modbus_amps
    name: "Output Current${name_suffix}"
    id: Output_Current${id_suffix}
    address: 211

  - <<: *modbus_hz
    name: "Output Frequency${name_suffix}"
    id: Output_Frequency${id_suffix}
    address: 212

  - <<: *modbus_watts
    name: "Output Active Power${name_suffix}"
    id: Output_Active_Power${id_suffix}
    address: 213
    
  - <<: *modbus_watts # actually VA
    name: "Output Apparent Power${name_suffix}"
    id: Output_Apparent_Power${id_suffix}
    address: 214
    device_class: apparent_power
    unit_of_measurement: "VA"

  - <<: *modbus_volts
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Voltage${name_suffix}"
    id: Battery_Voltage${id_suffix}
    address: 215
      
  - <<: *modbus_amps
    name: "Battery Current${name_suffix}"
    id: Battery_Current${id_suffix}
    address: 216

  - <<: *modbus_watts
    name: "Battery Power${name_suffix}"
    id: Battery_Power${id_suffix}
    address: 217
    register_count: 2          # address 218 Internal Command
     
  - <<: *modbus_volts
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "PV Voltage${name_suffix}"
    id: PV_Voltage${id_suffix}
    address: 219
    accuracy_decimals: 0 # still want this?

  - <<: *modbus_amps
    name: "PV Current${name_suffix}"
    id: PV_Current${id_suffix}
    address: 220
    register_count: 3     # 221-222 Reserved

  - <<: *modbus_watts
    name: "PV Power${name_suffix}"
    id: PV_Power${id_suffix}
    address: 223

  - <<: *modbus_watts
    name: "PV Charging Power${name_suffix}"
    id: PV_Charging_Power${id_suffix}
    address: 224

  - <<: *modbus_percent
    name: "Inverter Load${name_suffix}"
    id: Inverter_Load_Percentage${id_suffix}
    address: 225
    device_class: "" # leave it as battery?
  
  - <<: *modbus_temp
    name: "Temperature DC-DC${name_suffix}"
    id: Temperature_DCDC${id_suffix}
    address: 226
  
  - <<: *modbus_temp
    name: "Temperature Inverter${name_suffix}"
    id: Temperature_Inverter${id_suffix}
    address: 227
    register_count: 2     # 228 Reserved

  - <<: *modbus_percent
    name: "Battery Percentage${name_suffix}"
    id: Battery_Percentage${id_suffix}
    address: 229
    value_type: U_WORD # shouldn't really matter, not getting big enough values
    register_count: 3     # 230 Internal, 231 Reserved

  - <<: *modbus_amps
    name: "Battery Current 232${name_suffix}"
    id: Battery_Current_ID_232${id_suffix}
    address: 232

  - <<: *modbus_amps
    name: "Inverter Charging Current${name_suffix}"
    id: Inverter_Charging_Current${id_suffix}
    address: 233

  - <<: *modbus_amps
    name: "PV Charging Current${name_suffix}"
    id: PV_Charging_Current${id_suffix}
    address: 234

# 235-299 reserverd or invalid


select:

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Fault Code${name_suffix}"
    id: Fault_Code${id_suffix}
    entity_category: config
    address: 100
    register_count: 2
    use_write_multiple: true
    value_type: U_DWORD
    optionsmap:            #FIXME it's a BITMASK!!!
      "None": 0
      "Over temperature of inverter module":  1
      "Over temperature of DCDC module": 2
      "Battery over voltage": 3
      "Over temperature of PV module": 4
      "Output short circuited": 5
      "Over Inverter voltage": 6 
      "Output over load": 7
      "Bus over voltage": 8
      "Bus soft start times out": 9 
      "PV over current": 10
      "PV over voltage": 11
      "Battery over current": 12
      "Inverter over current": 13
      "Bus low voltage": 14
      "Reserve": 15
      "Inverter DC component is too high": 16
      "Reserve2": 17
      "The zero bias of Output current is too large": 18 
      "The zero bias of inverter current is too large": 19 
      "The zero bias of battery current is too large": 20 
      "The zero bias of PV current is too large": 21 
      "Inverter low voltage": 22
      "Inverter negative power protection": 23
      "The host in the parallel system is lost": 24 
      "Synchronization signal abnormal in the parallel system": 25 
      "The battery type is incompatible": 26
      "Parallel versions are incompatible": 27 
  # could replate above "register_count: 2" with 8 to cover gap 103-107

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Warning Code${name_suffix}"
    id: Warning_Code${id_suffix}
    entity_category: config
    address: 108
    register_count: 2
    use_write_multiple: true
    value_type: U_DWORD
    optionsmap:           #FIXME it's a BITMASK!!!
      "None": 0
      "Mains waveform abnormal": 1
      "Mains low voltage": 3 
      "Mains over frequency": 4
      "Mains low frequency": 5
      "PV low voltage": 6
      "Over temperature": 7
      "Battery low voltage": 8
      "Battery is not connected": 9
      "Overload": 10
      "Battery Eq charging": 11
      "Battery is discharged at a low voltage and it has not been charged back to the recovery point": 12
      "Output power derating": 13
      "Fan blocked": 14
      "PV energy is too low to be use": 15
      "Parallel communication interrupted": 16
      "Output mode of Single and Parallel systems is inconsistent": 17
      "Battery voltage difference of parallel system is too large": 18

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Output Mode${name_suffix}"
    id: Output_Mode${id_suffix}
    entity_category: config
    address: 300
    value_type: U_WORD
    skip_updates: ${write_skip}
    use_write_multiple: true
    optionsmap:
      "Single": 0
      "Parallel": 1
      "3 Phase P1": 2
      "3 Phase P2": 3
      "3 Phase P3": 4

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Output Priority${name_suffix}"
    id: Output_Priority${id_suffix}
    entity_category: config
    address: 301
    value_type: U_WORD
    skip_updates: ${write_skip}
    use_write_multiple: true
    optionsmap:
      "Utility-Only": 0
      "PV-Only": 1
      "PV-Battery-Utility": 2
      "PV-Utility-Battery" : 3

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Input Voltage Range${name_suffix}"
    id: Input_Voltage_Range${id_suffix}
    entity_category: config
    address: 302
    value_type: U_WORD
    skip_updates: ${write_skip}
    use_write_multiple: true
    optionsmap:
      "Wide range": 0
      "Narrow range": 1 

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Buzzer Mode${name_suffix}"
    id: Buzzer_Mode${id_suffix}
    entity_category: config
    address: 303
    value_type: U_WORD
    skip_updates: ${write_skip}
    use_write_multiple: true
    optionsmap:
      "Mute all": 0
      "Beep source": 1
      "Beep warning": 2
      "Beep fault": 3
    register_count: 2     # 304 Reserved, 305... is switch, below

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Charging Priority${name_suffix}"
    id: Battery_Charging_Priority${id_suffix}
    entity_category: config
    address: 331
    value_type: U_WORD
    skip_updates: ${write_skip}
    use_write_multiple: true
    optionsmap:
      "Utility priority": 0
      "PV priority": 1
      "PV and Utility": 2
      "Only PV charging": 3

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Remote Turn On Mode${name_suffix}"
    id: Remote_Turn_On_Mode${id_suffix}
    entity_category: config
    address: 406
    value_type: U_WORD
    skip_updates: ${write_skip}
    use_write_multiple: true
    optionsmap:
      "Locally or remotely": 0
      "Only local": 1
      "Only remote": 2


number:

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Recovery Voltage (to Battery) in SBU Mode${name_suffix}"
    id: Battery_Recovery_Voltage${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "V"
    device_class: voltage
    address: 326
    value_type: U_WORD
    min_value: 40 #FIXME
    max_value: 54
    step: 0.1
    multiply: 10

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Protection Voltage (to Mains) in SBU mode${name_suffix}"
    id: Battery_Protection_Voltage${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "V"
    device_class: voltage
    address: 327
    value_type: U_WORD
    min_value: 40
    max_value: 54 #FIXME
    step: 0.1
    multiply: 10
    # register_count: 2     # 328 Reserved

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Low Cutoff Voltage in Off-Grid Mode${name_suffix}"
    id: Battery_Cutoff_Voltage${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "V"
    device_class: voltage
    address: 329
    value_type: U_WORD
    min_value: 40
    max_value: 54 #FIXME
    step: 0.1
    multiply: 10
    # register_count: 2     # 330 Reserved
  #331 in options

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Maximum Total Charging Current${name_suffix}"
    id: Battery_Max_Total_Charging_Current${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "A"
    device_class: current
    address: 332
    value_type: U_WORD
    min_value: 0 #FIXME
    max_value: 120
    step: 1
    multiply: 10

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    id: Battery_Mains_Total_Charging_Current${id_suffix}
    name: "Battery Maximum Mains Charging Current${name_suffix}"
    entity_category: config
    unit_of_measurement: "A"
    device_class: current
    skip_updates: ${write_skip}
    use_write_multiple: true
    address: 333
    value_type: U_WORD
    step: 1
    min_value: 0
    max_value: 80
    multiply: 10

#EQ Settings FIXME complete these
  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Equalization Voltage${name_suffix}"
    id: Battery_Equalization_Voltage${id_suffix}
    address: 334
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "V"
    device_class: voltage
    value_type: U_WORD
    min_value: 40
    max_value: 54 #FIXME
    step: 0.1
    multiply: 10
# Eq Charging voltage 0.1V Uint 334 1 R/W
# bat_eq_time min Uint 335 1 R/W Range: 0~900 FIXME
# Eq Timeout exit min Uint 336 1 R/W Range: 0~900 time
# Two Eq charging intervals day Uint 337 1 R/W Range:1~90
# Reserve 338 1 Reserve address

# Use these if battery is connected and communicating with inverter #

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Protection SOC (to Mains) in SBU Mode${name_suffix}"
    id: Battery_Protection_SOC${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "%"
    device_class: battery
    address: 341
    value_type: U_WORD
    min_value: 5
    max_value: 50
    step: 1

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Recovery SOC (to Battery) in SBU Mode${name_suffix}"
    id: Battery_Recovery_SOC${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "%"
    device_class: battery
    address: 342
    value_type: U_WORD
    min_value: 60
    max_value: 100
    step: 1

  - platform: modbus_controller
    modbus_controller_id: modbus_controller_id${id_suffix}
    name: "Battery Low Cutoff SOC in Off-grid Mode${name_suffix}"
    id: Battery_Cutoff_SOC${id_suffix}
    entity_category: config
    skip_updates: ${write_skip}
    use_write_multiple: true
    unit_of_measurement: "%"
    device_class: battery
    address: 343
    value_type: U_WORD
    min_value: 3
    max_value: 30 ### !!! Must be lower then "Mains mode battery discharge SOC protection value"
    step: 1


switch:

  - <<: *modbus_switch
    name: "LCD Backlight${name_suffix}"
    id: LCD_Backlight${id_suffix}
    address: 305

  - <<: *modbus_switch
    name: "LCD Return to First Screen${name_suffix}"
    id: LCD_Return${id_suffix}
    address: 306
    
  - <<: *modbus_switch
    name: "Power-saving Mode${name_suffix}"
    id: Power_Saving_Mode${id_suffix}
    address: 307

  - <<: *modbus_switch
    name: "Overload Automatic Restart${name_suffix}"
    id: Overload_Automatic_Restart${id_suffix}
    address: 308

  - <<: *modbus_switch
    name: "Overtemperature Automatic Restart${name_suffix}"
    id: Overtemperature_Automatic_Restart${id_suffix}
    address: 309

  - <<: *modbus_switch
    name: "Overload Transfer to Bypass${name_suffix}"
    id: Overload_Automatic_Bypass${id_suffix}
    address: 310

  - <<: *modbus_switch
    name: "Remote Power Switch${name_suffix}"
    id: Remote_Power_Switch${id_suffix}
    address: 420
    icon: "mdi:toggle-switch"
    
