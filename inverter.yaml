esphome:
  name: inverter
  friendly_name: Inverter
  
preferences:
  flash_write_interval: 10min

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret inverter_api_key

ota:
  - platform: esphome
    password: !secret inverter_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Setup"
    password: !secret inverter_ap_password

captive_portal:


# LED BLINKING

output:
  - platform: gpio
    pin:
      number: 8
      mode: output
    id: led_id

interval:
  - interval: 1000ms
    then:
      - output.turn_on: led_id
      - delay: 250ms
      - output.turn_off: led_id


# INTERDEVICE COMMUNICATION

udp:
  
packet_transport:
  - platform: udp
    encryption: !secret inverter_udp_key
    update_interval: 1s
    sensors:
      # - id: Output_Active_Power   # enable for TRANSMIT


# PACKAGES

substitutions:
  name_prefix: "⭐️ "
  inverter1_suffix: "_A"
  inverter2_suffix: "_B"
  inverter1_name_suffix: " A"
  inverter2_name_suffix: " B"

packages:
  # base: !include base-config.yaml
  inverter1: !include
    file: single-pow-hvm62k-48v-lip.yaml
    vars:
      tx_pin: GPIO21
      rx_pin: GPIO20
      id_suffix: ${inverter1_suffix}
      name_suffix: ${inverter1_name_suffix}
  inverter2: !include
    file: single-pow-hvm62k-48v-lip.yaml
    vars:
      tx_pin: GPIO10
      rx_pin: GPIO9
      id_suffix: ${inverter2_suffix}
      name_suffix:  ${inverter2_name_suffix}


# preferences
#           global_preferences->sync();
# https://esphome.io/cookbook/lambda_magic.html
# https://esphome.io/components/esphome.html#adjusting-flash-writes
# https://github.com/esphome/esphome/pull/2119
# https://github.com/esphome/feature-requests/issues/461
# https://community.home-assistant.io/t/history-services-integration-for-exporting-historical-data/743367
# https://www.reddit.com/r/Esphome/comments/11pouy0/access_past_values_of_a_sensor_stored_in_ha/
# https://community.home-assistant.io/t/restore-values-from-home-assistant-after-reboot-doing-it-with-automations-is-there-a-better-way/197068/10
# https://community.home-assistant.io/t/sensor-integration-reset-doesnt-go-back-to-zero/738774/2


# PROTOTYPE SENSORS Anchors/Aliases

.daily_energy: &daily_energy
  - platform: total_daily_energy
    unit_of_measurement: 'kWh'
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    restore: true
    filters:
      - multiply: 0.001


# SENSORS
sensor:

# INTEGRATING ENERGY SENSORS

  - <<: *daily_energy
    name: '${name_prefix}Daily Output Energy'
    id: Daily_Output_Energy
    power_id: Output_Active_Power

  - <<: *daily_energy
    name: '${name_prefix}Daily Battery Energy'
    id: Daily_Battery_Energy
    power_id: Battery_Power

  - <<: *daily_energy
    name: '${name_prefix}Daily PV Energy'
    id: Daily_PV_Energy
    power_id: PV_Power


# REMOTE SENSORS
  - platform: packet_transport
    provider: inverter
    id: Output_Active_Power_External
    remote_id: Output_Active_Power   # enable for RECEIVE


# COMBINATION SENSORS from connected inverters

  - platform: combination
    state_class: measurement
    type: median
    name: "${name_prefix}Mains Voltage"
    id: Mains_Voltage
    sources:
      - source: 'Mains_Voltage${inverter1_suffix}'
      - source: 'Mains_Voltage${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: median
    name: "${name_prefix}Mains Frequency"
    id: Mains_Frequency
    sources:
      - source: 'Mains_Frequency${inverter1_suffix}'
      - source: 'Mains_Frequency${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Mains Power"
    id: Mains_Power
    sources:
      - source: 'Mains_Power${inverter1_suffix}'
      - source: 'Mains_Power${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: mean
    name: "${name_prefix}Inverter Voltage"
    id: Inverter_Voltage
    sources:
      - source: 'Inverter_Voltage${inverter1_suffix}'
      - source: 'Inverter_Voltage${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Inverter Current"
    id: Inverter_Current
    sources:
      - source: 'Inverter_Current${inverter1_suffix}'
      - source: 'Inverter_Current${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Inverter Power"
    id: Inverter_Power
    sources:
      - source: 'Inverter_Power${inverter1_suffix}'
      - source: 'Inverter_Power${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: mean
    name: "${name_prefix}Inverter Load"
    id: Inverter_Load_Percentage
    sources:
      - source: 'Inverter_Load_Percentage${inverter1_suffix}'
      - source: 'Inverter_Load_Percentage${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Output Active Power"
    id: Output_Active_Power
    sources:
      - source: 'Output_Active_Power${inverter1_suffix}'
      - source: 'Output_Active_Power${inverter2_suffix}'
      - source: Output_Active_Power_External

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Output Apparent Power"
    id: Output_Apparent_Power
    sources:
      - source: 'Output_Apparent_Power${inverter1_suffix}'
      - source: 'Output_Apparent_Power${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: mean
    name: "${name_prefix}Output Voltage"
    id: Output_Voltage
    sources:
      - source: 'Output_Voltage${inverter1_suffix}'
      - source: 'Output_Voltage${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Output Current"
    id: Output_Current
    sources:
      - source: 'Output_Current${inverter1_suffix}'
      - source: 'Output_Current${inverter2_suffix}'
  
  - platform: combination
    state_class: measurement
    type: mean
    name: "${name_prefix}Battery Voltage"
    id: Battery_Voltage
    sources:
      - source: 'Battery_Voltage${inverter1_suffix}'
      - source: 'Battery_Voltage${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Battery Current"
    id: Battery_Current
    sources:
      - source: 'Battery_Current${inverter1_suffix}'
      - source: 'Battery_Current${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}Battery Power"
    id: Battery_Power
    sources:
      - source: 'Battery_Power${inverter1_suffix}'
      - source: 'Battery_Power${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}PV Power"
    id: PV_Power
    sources:
      - source: 'PV_Power${inverter1_suffix}'
      - source: 'PV_Power${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}PV Charging Power"
    id: PV_Charging_Power
    sources:
      - source: 'PV_Charging_Power${inverter1_suffix}'
      - source: 'PV_Charging_Power${inverter2_suffix}'

  - platform: combination
    state_class: measurement
    type: sum
    name: "${name_prefix}PV Charging Current"
    id: PV_Charging_Current
    sources:
      - source: 'PV_Charging_Current${inverter1_suffix}'
      - source: 'PV_Charging_Current${inverter2_suffix}'

  # - platform: combination
  #   type: sum
  #   name: "${name_prefix}NAME"
  #   id: ID
  #   sources:
  #     - source: 'ID${inverter1_suffix}'
  #     - source: 'ID${inverter2_suffix}'

    
# sensor:

  - platform: uptime
    name: "Uptime"
    entity_category: "diagnostic"
    device_class: duration
    update_interval: 1s

  - platform: wifi_signal
    name: "RSSI"
    id: wifi_rssi
    entity_category: "diagnostic"
    update_interval: 60s

  - platform: internal_temperature
    name: "ESP Temperature"
    id: esp_temperature
    entity_category: "diagnostic"
    device_class: temperature
    unit_of_measurement: "°C"

time:
  - platform: homeassistant
    id: homeassistant_time
